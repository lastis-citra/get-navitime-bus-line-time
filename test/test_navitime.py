from navitime import create_name_list
from navitime import create_name_list_compare_order


# 通常の結合
def test_create_name_list1():
    old_name_list = ['A', 'B', 'C', 'D', 'E']
    check_name_list = ['A', 'F', 'G', 'D', 'E']
    expected1 = ['A', 'F', 'G', 'B', 'C', 'D', 'E']
    expected2 = ['A', 'B', 'C', 'F', 'G', 'D', 'E']
    actual = create_name_list(old_name_list, check_name_list)

    assert actual in [expected1, expected2]


# 完全に吸収されるパターン
def test_create_name_list2():
    old_name_list = ['A', 'B', 'C', 'D', 'E']
    check_name_list = ['A', 'B', 'C']
    expected = ['A', 'B', 'C', 'D', 'E']
    assert create_name_list(old_name_list, check_name_list) == expected


# old_name_listに同じ名前があるパターン
def test_create_name_list3():
    old_name_list = ['A', 'B', 'C', 'B', 'D', 'E']
    check_name_list = ['A', 'F', 'G', 'D', 'E']
    expected1 = ['A', 'F', 'G', 'B', 'C', 'B', 'D', 'E']
    expected2 = ['A', 'B', 'C', 'B', 'F', 'G', 'D', 'E']
    actual = create_name_list(old_name_list, check_name_list)

    assert actual in [expected1, expected2]


# check_name_listに同じ名前があるパターン
def test_create_name_list3_2():
    old_name_list = ['A', 'B', 'C', 'D', 'E']
    check_name_list = ['C', 'A', 'B', 'C', 'D', 'E']
    expected = ['C', 'A', 'B', 'C', 'D', 'E']
    assert create_name_list(old_name_list, check_name_list) == expected


# old_name_listとcheck_name_listの両方に同じ名前があるパターン
def test_create_name_list4():
    old_name_list = ['A', 'B', 'C', 'B', 'D', 'E']
    check_name_list = ['C', 'A', 'B', 'C', 'D', 'E']
    expected = ['C', 'A', 'B', 'C', 'B', 'D', 'E']
    assert create_name_list(old_name_list, check_name_list) == expected


# バグチェック
def test_create_name_list5():
    old_name_list = ['伊豆海洋公園', '蓮着寺', '城ヶ崎オレンジ村', 'ルネッサ城ヶ崎', '蓮着寺口', '伊東高校城ヶ崎分校',
                     '対島中学校正門', '対島中学校', '伊豆高原駅', '平松', '伊豆高原駅やまも口',
                     '八幡野コミュニティセンター', '八幡野', '平松', '伊豆高原駅', '平松', '伊豆高原駅やまも口',
                     '八幡野コミュニティセンター', '八幡野', '平松', 'ファミリーガーデン', '対島中学校', '四辻',
                     '池入口', '先原', '光の村', '東大室', 'ぐらんぱる公園', '理想郷', '理想郷東口', '大室高原二丁目',
                     '大室山東', 'ファミリーガーデン', '瀬戸山', '高原中央', '株尻', '南大室台入口', '池下林', '坂の下',
                     '南原', '片倉', '池', '登山口', 'ふれあい広場', '池中野', '室の腰',
                     'ろう人形美術館', '桜の里', 'シャボテン公園']
    check_name_list = ['伊豆高原駅', '平松', '伊豆高原駅やまも口', '八幡野コミュニティセンター', '八幡野', '平松',
                       'ファミリーガーデン', '瀬戸山', '高原中央', '株尻', '南大室台入口', '池下林', '坂の下', '南原',
                       '片倉', '池', '登山口', 'ふれあい広場', '池中野']
    expected = ['伊豆海洋公園', '蓮着寺', '城ヶ崎オレンジ村', 'ルネッサ城ヶ崎', '蓮着寺口', '伊東高校城ヶ崎分校',
                '対島中学校正門', '対島中学校', '伊豆高原駅', '平松', '伊豆高原駅やまも口',
                '八幡野コミュニティセンター', '八幡野', '平松', '伊豆高原駅', '平松', '伊豆高原駅やまも口',
                '八幡野コミュニティセンター', '八幡野', '平松', 'ファミリーガーデン', '対島中学校', '四辻',
                '池入口', '先原', '光の村', '東大室', 'ぐらんぱる公園', '理想郷', '理想郷東口', '大室高原二丁目',
                '大室山東', 'ファミリーガーデン', '瀬戸山', '高原中央', '株尻', '南大室台入口', '池下林', '坂の下',
                '南原', '片倉', '池', '登山口', 'ふれあい広場', '池中野', '室の腰', 'ろう人形美術館', '桜の里',
                'シャボテン公園']
    assert create_name_list(old_name_list, check_name_list) == expected


# old_name_listとcheck_name_listの両方に同じ名前があってcheck_name_listの方が途中で終わるパターン
def test_create_name_list6():
    old_name_list = ['A', 'B', 'C', 'B', 'D', 'E']
    check_name_list = ['C', 'A', 'B', 'C', 'D']
    expected = ['C', 'A', 'B', 'C', 'B', 'D', 'E']
    assert create_name_list(old_name_list, check_name_list) == expected


# バグチェック
def test_create_name_list_compare_order1():
    old_name_list = ['松尾橋', '梅宮大社前', '梅津西浦町', '長福寺道', '梅津段町', '日新電機前', '南広町', '京都外大前',
                     '四条葛野大路', '四条中学前', '西院巽町', '西大路四条［阪急・嵐電西院駅］', '四条御前通',
                     '四条中新道', '壬生寺道', '四条大宮', '四条堀川', '四条西洞院', '四条烏丸［地下鉄四条駅］',
                     '四条高倉', '四条河原町', '河原町三条', '京都市役所前', '河原町丸太町', '荒神口', '府立医大病院前',
                     '河原町今出川', '出町柳駅前', '百万遍', '飛鳥井町', '叡電元田中', '田中大久保町', '高原町',
                     '伊織町', '上終町・瓜生山学園\u3000京都芸術大学前', '北白川別当町', '北白川小倉町', '田中樋ノ口町',
                     '飛鳥井町', '百万遍', '出町柳駅前', '河原町今出川', '府立医大病院前', '荒神口', '河原町丸太町',
                     '京都市役所前', '河原町三条', '四条河原町', '四条高倉', '四条烏丸［地下鉄四条駅］', '四条西洞院',
                     '四条堀川', '四条大宮', '壬生寺道', '四条中新道', '四条御前通', '西大路四条［阪急・嵐電西院駅］',
                     '西院巽町', '四条中学前', '四条葛野大路', '京都外大前', '南広町', '日新電機前', '梅津段町',
                     '長福寺道', '梅津西浦町', '梅宮大社前', '松尾橋']
    check_name_list = ['北白川仕伏町', '上池田町', '北白川別当町', '北白川小倉町', '田中樋ノ口町', '飛鳥井町', '百万遍',
                       '出町柳駅前', '河原町今出川', '府立医大病院前', '荒神口', '河原町丸太町', '京都市役所前',
                       '河原町三条', '四条河原町', '四条高倉', '四条烏丸［地下鉄四条駅］', '四条西洞院', '四条堀川',
                       '四条大宮', '壬生寺道', '四条中新道', '四条御前通', '西大路四条［阪急・嵐電西院駅］', '西院巽町',
                       '四条中学前', '四条葛野大路', '京都外大前', '南広町', '日新電機前', '梅津段町', '長福寺道',
                       '梅津西浦町', '梅宮大社前', '松尾橋']
    expected = ['北白川仕伏町', '上池田町', '松尾橋', '梅宮大社前', '梅津西浦町', '長福寺道', '梅津段町', '日新電機前',
                '南広町', '京都外大前', '四条葛野大路', '四条中学前', '西院巽町', '西大路四条［阪急・嵐電西院駅］',
                '四条御前通', '四条中新道', '壬生寺道', '四条大宮', '四条堀川', '四条西洞院', '四条烏丸［地下鉄四条駅］',
                '四条高倉', '四条河原町', '河原町三条', '京都市役所前', '河原町丸太町', '荒神口', '府立医大病院前',
                '河原町今出川', '出町柳駅前', '百万遍', '飛鳥井町', '叡電元田中', '田中大久保町', '高原町', '伊織町',
                '上終町・瓜生山学園\u3000京都芸術大学前', '北白川別当町', '北白川小倉町', '田中樋ノ口町', '飛鳥井町',
                '百万遍', '出町柳駅前', '河原町今出川', '府立医大病院前', '荒神口', '河原町丸太町', '京都市役所前',
                '河原町三条', '四条河原町', '四条高倉', '四条烏丸［地下鉄四条駅］', '四条西洞院', '四条堀川', '四条大宮',
                '壬生寺道', '四条中新道', '四条御前通', '西大路四条［阪急・嵐電西院駅］', '西院巽町', '四条中学前',
                '四条葛野大路', '京都外大前', '南広町', '日新電機前', '梅津段町', '長福寺道', '梅津西浦町',
                '梅宮大社前', '松尾橋']
    assert create_name_list_compare_order(old_name_list, check_name_list) == expected
